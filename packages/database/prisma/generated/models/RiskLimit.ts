
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * This file exports the `RiskLimit` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model RiskLimit
 * 
 */
export type RiskLimitModel = runtime.Types.Result.DefaultSelection<Prisma.$RiskLimitPayload>

export type AggregateRiskLimit = {
  _count: RiskLimitCountAggregateOutputType | null
  _avg: RiskLimitAvgAggregateOutputType | null
  _sum: RiskLimitSumAggregateOutputType | null
  _min: RiskLimitMinAggregateOutputType | null
  _max: RiskLimitMaxAggregateOutputType | null
}

export type RiskLimitAvgAggregateOutputType = {
  value: runtime.Decimal | null
}

export type RiskLimitSumAggregateOutputType = {
  value: runtime.Decimal | null
}

export type RiskLimitMinAggregateOutputType = {
  id: string | null
  userId: string | null
  portfolioId: string | null
  type: string | null
  value: runtime.Decimal | null
  enabled: boolean | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type RiskLimitMaxAggregateOutputType = {
  id: string | null
  userId: string | null
  portfolioId: string | null
  type: string | null
  value: runtime.Decimal | null
  enabled: boolean | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type RiskLimitCountAggregateOutputType = {
  id: number
  userId: number
  portfolioId: number
  type: number
  value: number
  enabled: number
  createdAt: number
  updatedAt: number
  _all: number
}


export type RiskLimitAvgAggregateInputType = {
  value?: true
}

export type RiskLimitSumAggregateInputType = {
  value?: true
}

export type RiskLimitMinAggregateInputType = {
  id?: true
  userId?: true
  portfolioId?: true
  type?: true
  value?: true
  enabled?: true
  createdAt?: true
  updatedAt?: true
}

export type RiskLimitMaxAggregateInputType = {
  id?: true
  userId?: true
  portfolioId?: true
  type?: true
  value?: true
  enabled?: true
  createdAt?: true
  updatedAt?: true
}

export type RiskLimitCountAggregateInputType = {
  id?: true
  userId?: true
  portfolioId?: true
  type?: true
  value?: true
  enabled?: true
  createdAt?: true
  updatedAt?: true
  _all?: true
}

export type RiskLimitAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which RiskLimit to aggregate.
   */
  where?: Prisma.RiskLimitWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of RiskLimits to fetch.
   */
  orderBy?: Prisma.RiskLimitOrderByWithRelationInput | Prisma.RiskLimitOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.RiskLimitWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` RiskLimits from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` RiskLimits.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned RiskLimits
  **/
  _count?: true | RiskLimitCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: RiskLimitAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: RiskLimitSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: RiskLimitMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: RiskLimitMaxAggregateInputType
}

export type GetRiskLimitAggregateType<T extends RiskLimitAggregateArgs> = {
      [P in keyof T & keyof AggregateRiskLimit]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateRiskLimit[P]>
    : Prisma.GetScalarType<T[P], AggregateRiskLimit[P]>
}




export type RiskLimitGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.RiskLimitWhereInput
  orderBy?: Prisma.RiskLimitOrderByWithAggregationInput | Prisma.RiskLimitOrderByWithAggregationInput[]
  by: Prisma.RiskLimitScalarFieldEnum[] | Prisma.RiskLimitScalarFieldEnum
  having?: Prisma.RiskLimitScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: RiskLimitCountAggregateInputType | true
  _avg?: RiskLimitAvgAggregateInputType
  _sum?: RiskLimitSumAggregateInputType
  _min?: RiskLimitMinAggregateInputType
  _max?: RiskLimitMaxAggregateInputType
}

export type RiskLimitGroupByOutputType = {
  id: string
  userId: string
  portfolioId: string | null
  type: string
  value: runtime.Decimal
  enabled: boolean
  createdAt: Date
  updatedAt: Date
  _count: RiskLimitCountAggregateOutputType | null
  _avg: RiskLimitAvgAggregateOutputType | null
  _sum: RiskLimitSumAggregateOutputType | null
  _min: RiskLimitMinAggregateOutputType | null
  _max: RiskLimitMaxAggregateOutputType | null
}

type GetRiskLimitGroupByPayload<T extends RiskLimitGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<RiskLimitGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof RiskLimitGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], RiskLimitGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], RiskLimitGroupByOutputType[P]>
      }
    >
  >



export type RiskLimitWhereInput = {
  AND?: Prisma.RiskLimitWhereInput | Prisma.RiskLimitWhereInput[]
  OR?: Prisma.RiskLimitWhereInput[]
  NOT?: Prisma.RiskLimitWhereInput | Prisma.RiskLimitWhereInput[]
  id?: Prisma.StringFilter<"RiskLimit"> | string
  userId?: Prisma.StringFilter<"RiskLimit"> | string
  portfolioId?: Prisma.StringNullableFilter<"RiskLimit"> | string | null
  type?: Prisma.StringFilter<"RiskLimit"> | string
  value?: Prisma.DecimalFilter<"RiskLimit"> | runtime.Decimal | runtime.DecimalJsLike | number | string
  enabled?: Prisma.BoolFilter<"RiskLimit"> | boolean
  createdAt?: Prisma.DateTimeFilter<"RiskLimit"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"RiskLimit"> | Date | string
  user?: Prisma.XOR<Prisma.UserScalarRelationFilter, Prisma.UserWhereInput>
  portfolio?: Prisma.XOR<Prisma.PortfolioNullableScalarRelationFilter, Prisma.PortfolioWhereInput> | null
}

export type RiskLimitOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  userId?: Prisma.SortOrder
  portfolioId?: Prisma.SortOrderInput | Prisma.SortOrder
  type?: Prisma.SortOrder
  value?: Prisma.SortOrder
  enabled?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  user?: Prisma.UserOrderByWithRelationInput
  portfolio?: Prisma.PortfolioOrderByWithRelationInput
}

export type RiskLimitWhereUniqueInput = Prisma.AtLeast<{
  id?: string
  AND?: Prisma.RiskLimitWhereInput | Prisma.RiskLimitWhereInput[]
  OR?: Prisma.RiskLimitWhereInput[]
  NOT?: Prisma.RiskLimitWhereInput | Prisma.RiskLimitWhereInput[]
  userId?: Prisma.StringFilter<"RiskLimit"> | string
  portfolioId?: Prisma.StringNullableFilter<"RiskLimit"> | string | null
  type?: Prisma.StringFilter<"RiskLimit"> | string
  value?: Prisma.DecimalFilter<"RiskLimit"> | runtime.Decimal | runtime.DecimalJsLike | number | string
  enabled?: Prisma.BoolFilter<"RiskLimit"> | boolean
  createdAt?: Prisma.DateTimeFilter<"RiskLimit"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"RiskLimit"> | Date | string
  user?: Prisma.XOR<Prisma.UserScalarRelationFilter, Prisma.UserWhereInput>
  portfolio?: Prisma.XOR<Prisma.PortfolioNullableScalarRelationFilter, Prisma.PortfolioWhereInput> | null
}, "id">

export type RiskLimitOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  userId?: Prisma.SortOrder
  portfolioId?: Prisma.SortOrderInput | Prisma.SortOrder
  type?: Prisma.SortOrder
  value?: Prisma.SortOrder
  enabled?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  _count?: Prisma.RiskLimitCountOrderByAggregateInput
  _avg?: Prisma.RiskLimitAvgOrderByAggregateInput
  _max?: Prisma.RiskLimitMaxOrderByAggregateInput
  _min?: Prisma.RiskLimitMinOrderByAggregateInput
  _sum?: Prisma.RiskLimitSumOrderByAggregateInput
}

export type RiskLimitScalarWhereWithAggregatesInput = {
  AND?: Prisma.RiskLimitScalarWhereWithAggregatesInput | Prisma.RiskLimitScalarWhereWithAggregatesInput[]
  OR?: Prisma.RiskLimitScalarWhereWithAggregatesInput[]
  NOT?: Prisma.RiskLimitScalarWhereWithAggregatesInput | Prisma.RiskLimitScalarWhereWithAggregatesInput[]
  id?: Prisma.StringWithAggregatesFilter<"RiskLimit"> | string
  userId?: Prisma.StringWithAggregatesFilter<"RiskLimit"> | string
  portfolioId?: Prisma.StringNullableWithAggregatesFilter<"RiskLimit"> | string | null
  type?: Prisma.StringWithAggregatesFilter<"RiskLimit"> | string
  value?: Prisma.DecimalWithAggregatesFilter<"RiskLimit"> | runtime.Decimal | runtime.DecimalJsLike | number | string
  enabled?: Prisma.BoolWithAggregatesFilter<"RiskLimit"> | boolean
  createdAt?: Prisma.DateTimeWithAggregatesFilter<"RiskLimit"> | Date | string
  updatedAt?: Prisma.DateTimeWithAggregatesFilter<"RiskLimit"> | Date | string
}

export type RiskLimitCreateInput = {
  id?: string
  type: string
  value: runtime.Decimal | runtime.DecimalJsLike | number | string
  enabled?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  user: Prisma.UserCreateNestedOneWithoutRiskLimitsInput
  portfolio?: Prisma.PortfolioCreateNestedOneWithoutRiskLimitsInput
}

export type RiskLimitUncheckedCreateInput = {
  id?: string
  userId: string
  portfolioId?: string | null
  type: string
  value: runtime.Decimal | runtime.DecimalJsLike | number | string
  enabled?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type RiskLimitUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  type?: Prisma.StringFieldUpdateOperationsInput | string
  value?: Prisma.DecimalFieldUpdateOperationsInput | runtime.Decimal | runtime.DecimalJsLike | number | string
  enabled?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  user?: Prisma.UserUpdateOneRequiredWithoutRiskLimitsNestedInput
  portfolio?: Prisma.PortfolioUpdateOneWithoutRiskLimitsNestedInput
}

export type RiskLimitUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  userId?: Prisma.StringFieldUpdateOperationsInput | string
  portfolioId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  type?: Prisma.StringFieldUpdateOperationsInput | string
  value?: Prisma.DecimalFieldUpdateOperationsInput | runtime.Decimal | runtime.DecimalJsLike | number | string
  enabled?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type RiskLimitCreateManyInput = {
  id?: string
  userId: string
  portfolioId?: string | null
  type: string
  value: runtime.Decimal | runtime.DecimalJsLike | number | string
  enabled?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type RiskLimitUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  type?: Prisma.StringFieldUpdateOperationsInput | string
  value?: Prisma.DecimalFieldUpdateOperationsInput | runtime.Decimal | runtime.DecimalJsLike | number | string
  enabled?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type RiskLimitUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  userId?: Prisma.StringFieldUpdateOperationsInput | string
  portfolioId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  type?: Prisma.StringFieldUpdateOperationsInput | string
  value?: Prisma.DecimalFieldUpdateOperationsInput | runtime.Decimal | runtime.DecimalJsLike | number | string
  enabled?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type RiskLimitListRelationFilter = {
  every?: Prisma.RiskLimitWhereInput
  some?: Prisma.RiskLimitWhereInput
  none?: Prisma.RiskLimitWhereInput
}

export type RiskLimitOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type RiskLimitCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  userId?: Prisma.SortOrder
  portfolioId?: Prisma.SortOrder
  type?: Prisma.SortOrder
  value?: Prisma.SortOrder
  enabled?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type RiskLimitAvgOrderByAggregateInput = {
  value?: Prisma.SortOrder
}

export type RiskLimitMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  userId?: Prisma.SortOrder
  portfolioId?: Prisma.SortOrder
  type?: Prisma.SortOrder
  value?: Prisma.SortOrder
  enabled?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type RiskLimitMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  userId?: Prisma.SortOrder
  portfolioId?: Prisma.SortOrder
  type?: Prisma.SortOrder
  value?: Prisma.SortOrder
  enabled?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type RiskLimitSumOrderByAggregateInput = {
  value?: Prisma.SortOrder
}

export type RiskLimitCreateNestedManyWithoutUserInput = {
  create?: Prisma.XOR<Prisma.RiskLimitCreateWithoutUserInput, Prisma.RiskLimitUncheckedCreateWithoutUserInput> | Prisma.RiskLimitCreateWithoutUserInput[] | Prisma.RiskLimitUncheckedCreateWithoutUserInput[]
  connectOrCreate?: Prisma.RiskLimitCreateOrConnectWithoutUserInput | Prisma.RiskLimitCreateOrConnectWithoutUserInput[]
  createMany?: Prisma.RiskLimitCreateManyUserInputEnvelope
  connect?: Prisma.RiskLimitWhereUniqueInput | Prisma.RiskLimitWhereUniqueInput[]
}

export type RiskLimitUncheckedCreateNestedManyWithoutUserInput = {
  create?: Prisma.XOR<Prisma.RiskLimitCreateWithoutUserInput, Prisma.RiskLimitUncheckedCreateWithoutUserInput> | Prisma.RiskLimitCreateWithoutUserInput[] | Prisma.RiskLimitUncheckedCreateWithoutUserInput[]
  connectOrCreate?: Prisma.RiskLimitCreateOrConnectWithoutUserInput | Prisma.RiskLimitCreateOrConnectWithoutUserInput[]
  createMany?: Prisma.RiskLimitCreateManyUserInputEnvelope
  connect?: Prisma.RiskLimitWhereUniqueInput | Prisma.RiskLimitWhereUniqueInput[]
}

export type RiskLimitUpdateManyWithoutUserNestedInput = {
  create?: Prisma.XOR<Prisma.RiskLimitCreateWithoutUserInput, Prisma.RiskLimitUncheckedCreateWithoutUserInput> | Prisma.RiskLimitCreateWithoutUserInput[] | Prisma.RiskLimitUncheckedCreateWithoutUserInput[]
  connectOrCreate?: Prisma.RiskLimitCreateOrConnectWithoutUserInput | Prisma.RiskLimitCreateOrConnectWithoutUserInput[]
  upsert?: Prisma.RiskLimitUpsertWithWhereUniqueWithoutUserInput | Prisma.RiskLimitUpsertWithWhereUniqueWithoutUserInput[]
  createMany?: Prisma.RiskLimitCreateManyUserInputEnvelope
  set?: Prisma.RiskLimitWhereUniqueInput | Prisma.RiskLimitWhereUniqueInput[]
  disconnect?: Prisma.RiskLimitWhereUniqueInput | Prisma.RiskLimitWhereUniqueInput[]
  delete?: Prisma.RiskLimitWhereUniqueInput | Prisma.RiskLimitWhereUniqueInput[]
  connect?: Prisma.RiskLimitWhereUniqueInput | Prisma.RiskLimitWhereUniqueInput[]
  update?: Prisma.RiskLimitUpdateWithWhereUniqueWithoutUserInput | Prisma.RiskLimitUpdateWithWhereUniqueWithoutUserInput[]
  updateMany?: Prisma.RiskLimitUpdateManyWithWhereWithoutUserInput | Prisma.RiskLimitUpdateManyWithWhereWithoutUserInput[]
  deleteMany?: Prisma.RiskLimitScalarWhereInput | Prisma.RiskLimitScalarWhereInput[]
}

export type RiskLimitUncheckedUpdateManyWithoutUserNestedInput = {
  create?: Prisma.XOR<Prisma.RiskLimitCreateWithoutUserInput, Prisma.RiskLimitUncheckedCreateWithoutUserInput> | Prisma.RiskLimitCreateWithoutUserInput[] | Prisma.RiskLimitUncheckedCreateWithoutUserInput[]
  connectOrCreate?: Prisma.RiskLimitCreateOrConnectWithoutUserInput | Prisma.RiskLimitCreateOrConnectWithoutUserInput[]
  upsert?: Prisma.RiskLimitUpsertWithWhereUniqueWithoutUserInput | Prisma.RiskLimitUpsertWithWhereUniqueWithoutUserInput[]
  createMany?: Prisma.RiskLimitCreateManyUserInputEnvelope
  set?: Prisma.RiskLimitWhereUniqueInput | Prisma.RiskLimitWhereUniqueInput[]
  disconnect?: Prisma.RiskLimitWhereUniqueInput | Prisma.RiskLimitWhereUniqueInput[]
  delete?: Prisma.RiskLimitWhereUniqueInput | Prisma.RiskLimitWhereUniqueInput[]
  connect?: Prisma.RiskLimitWhereUniqueInput | Prisma.RiskLimitWhereUniqueInput[]
  update?: Prisma.RiskLimitUpdateWithWhereUniqueWithoutUserInput | Prisma.RiskLimitUpdateWithWhereUniqueWithoutUserInput[]
  updateMany?: Prisma.RiskLimitUpdateManyWithWhereWithoutUserInput | Prisma.RiskLimitUpdateManyWithWhereWithoutUserInput[]
  deleteMany?: Prisma.RiskLimitScalarWhereInput | Prisma.RiskLimitScalarWhereInput[]
}

export type RiskLimitCreateNestedManyWithoutPortfolioInput = {
  create?: Prisma.XOR<Prisma.RiskLimitCreateWithoutPortfolioInput, Prisma.RiskLimitUncheckedCreateWithoutPortfolioInput> | Prisma.RiskLimitCreateWithoutPortfolioInput[] | Prisma.RiskLimitUncheckedCreateWithoutPortfolioInput[]
  connectOrCreate?: Prisma.RiskLimitCreateOrConnectWithoutPortfolioInput | Prisma.RiskLimitCreateOrConnectWithoutPortfolioInput[]
  createMany?: Prisma.RiskLimitCreateManyPortfolioInputEnvelope
  connect?: Prisma.RiskLimitWhereUniqueInput | Prisma.RiskLimitWhereUniqueInput[]
}

export type RiskLimitUncheckedCreateNestedManyWithoutPortfolioInput = {
  create?: Prisma.XOR<Prisma.RiskLimitCreateWithoutPortfolioInput, Prisma.RiskLimitUncheckedCreateWithoutPortfolioInput> | Prisma.RiskLimitCreateWithoutPortfolioInput[] | Prisma.RiskLimitUncheckedCreateWithoutPortfolioInput[]
  connectOrCreate?: Prisma.RiskLimitCreateOrConnectWithoutPortfolioInput | Prisma.RiskLimitCreateOrConnectWithoutPortfolioInput[]
  createMany?: Prisma.RiskLimitCreateManyPortfolioInputEnvelope
  connect?: Prisma.RiskLimitWhereUniqueInput | Prisma.RiskLimitWhereUniqueInput[]
}

export type RiskLimitUpdateManyWithoutPortfolioNestedInput = {
  create?: Prisma.XOR<Prisma.RiskLimitCreateWithoutPortfolioInput, Prisma.RiskLimitUncheckedCreateWithoutPortfolioInput> | Prisma.RiskLimitCreateWithoutPortfolioInput[] | Prisma.RiskLimitUncheckedCreateWithoutPortfolioInput[]
  connectOrCreate?: Prisma.RiskLimitCreateOrConnectWithoutPortfolioInput | Prisma.RiskLimitCreateOrConnectWithoutPortfolioInput[]
  upsert?: Prisma.RiskLimitUpsertWithWhereUniqueWithoutPortfolioInput | Prisma.RiskLimitUpsertWithWhereUniqueWithoutPortfolioInput[]
  createMany?: Prisma.RiskLimitCreateManyPortfolioInputEnvelope
  set?: Prisma.RiskLimitWhereUniqueInput | Prisma.RiskLimitWhereUniqueInput[]
  disconnect?: Prisma.RiskLimitWhereUniqueInput | Prisma.RiskLimitWhereUniqueInput[]
  delete?: Prisma.RiskLimitWhereUniqueInput | Prisma.RiskLimitWhereUniqueInput[]
  connect?: Prisma.RiskLimitWhereUniqueInput | Prisma.RiskLimitWhereUniqueInput[]
  update?: Prisma.RiskLimitUpdateWithWhereUniqueWithoutPortfolioInput | Prisma.RiskLimitUpdateWithWhereUniqueWithoutPortfolioInput[]
  updateMany?: Prisma.RiskLimitUpdateManyWithWhereWithoutPortfolioInput | Prisma.RiskLimitUpdateManyWithWhereWithoutPortfolioInput[]
  deleteMany?: Prisma.RiskLimitScalarWhereInput | Prisma.RiskLimitScalarWhereInput[]
}

export type RiskLimitUncheckedUpdateManyWithoutPortfolioNestedInput = {
  create?: Prisma.XOR<Prisma.RiskLimitCreateWithoutPortfolioInput, Prisma.RiskLimitUncheckedCreateWithoutPortfolioInput> | Prisma.RiskLimitCreateWithoutPortfolioInput[] | Prisma.RiskLimitUncheckedCreateWithoutPortfolioInput[]
  connectOrCreate?: Prisma.RiskLimitCreateOrConnectWithoutPortfolioInput | Prisma.RiskLimitCreateOrConnectWithoutPortfolioInput[]
  upsert?: Prisma.RiskLimitUpsertWithWhereUniqueWithoutPortfolioInput | Prisma.RiskLimitUpsertWithWhereUniqueWithoutPortfolioInput[]
  createMany?: Prisma.RiskLimitCreateManyPortfolioInputEnvelope
  set?: Prisma.RiskLimitWhereUniqueInput | Prisma.RiskLimitWhereUniqueInput[]
  disconnect?: Prisma.RiskLimitWhereUniqueInput | Prisma.RiskLimitWhereUniqueInput[]
  delete?: Prisma.RiskLimitWhereUniqueInput | Prisma.RiskLimitWhereUniqueInput[]
  connect?: Prisma.RiskLimitWhereUniqueInput | Prisma.RiskLimitWhereUniqueInput[]
  update?: Prisma.RiskLimitUpdateWithWhereUniqueWithoutPortfolioInput | Prisma.RiskLimitUpdateWithWhereUniqueWithoutPortfolioInput[]
  updateMany?: Prisma.RiskLimitUpdateManyWithWhereWithoutPortfolioInput | Prisma.RiskLimitUpdateManyWithWhereWithoutPortfolioInput[]
  deleteMany?: Prisma.RiskLimitScalarWhereInput | Prisma.RiskLimitScalarWhereInput[]
}

export type RiskLimitCreateWithoutUserInput = {
  id?: string
  type: string
  value: runtime.Decimal | runtime.DecimalJsLike | number | string
  enabled?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  portfolio?: Prisma.PortfolioCreateNestedOneWithoutRiskLimitsInput
}

export type RiskLimitUncheckedCreateWithoutUserInput = {
  id?: string
  portfolioId?: string | null
  type: string
  value: runtime.Decimal | runtime.DecimalJsLike | number | string
  enabled?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type RiskLimitCreateOrConnectWithoutUserInput = {
  where: Prisma.RiskLimitWhereUniqueInput
  create: Prisma.XOR<Prisma.RiskLimitCreateWithoutUserInput, Prisma.RiskLimitUncheckedCreateWithoutUserInput>
}

export type RiskLimitCreateManyUserInputEnvelope = {
  data: Prisma.RiskLimitCreateManyUserInput | Prisma.RiskLimitCreateManyUserInput[]
  skipDuplicates?: boolean
}

export type RiskLimitUpsertWithWhereUniqueWithoutUserInput = {
  where: Prisma.RiskLimitWhereUniqueInput
  update: Prisma.XOR<Prisma.RiskLimitUpdateWithoutUserInput, Prisma.RiskLimitUncheckedUpdateWithoutUserInput>
  create: Prisma.XOR<Prisma.RiskLimitCreateWithoutUserInput, Prisma.RiskLimitUncheckedCreateWithoutUserInput>
}

export type RiskLimitUpdateWithWhereUniqueWithoutUserInput = {
  where: Prisma.RiskLimitWhereUniqueInput
  data: Prisma.XOR<Prisma.RiskLimitUpdateWithoutUserInput, Prisma.RiskLimitUncheckedUpdateWithoutUserInput>
}

export type RiskLimitUpdateManyWithWhereWithoutUserInput = {
  where: Prisma.RiskLimitScalarWhereInput
  data: Prisma.XOR<Prisma.RiskLimitUpdateManyMutationInput, Prisma.RiskLimitUncheckedUpdateManyWithoutUserInput>
}

export type RiskLimitScalarWhereInput = {
  AND?: Prisma.RiskLimitScalarWhereInput | Prisma.RiskLimitScalarWhereInput[]
  OR?: Prisma.RiskLimitScalarWhereInput[]
  NOT?: Prisma.RiskLimitScalarWhereInput | Prisma.RiskLimitScalarWhereInput[]
  id?: Prisma.StringFilter<"RiskLimit"> | string
  userId?: Prisma.StringFilter<"RiskLimit"> | string
  portfolioId?: Prisma.StringNullableFilter<"RiskLimit"> | string | null
  type?: Prisma.StringFilter<"RiskLimit"> | string
  value?: Prisma.DecimalFilter<"RiskLimit"> | runtime.Decimal | runtime.DecimalJsLike | number | string
  enabled?: Prisma.BoolFilter<"RiskLimit"> | boolean
  createdAt?: Prisma.DateTimeFilter<"RiskLimit"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"RiskLimit"> | Date | string
}

export type RiskLimitCreateWithoutPortfolioInput = {
  id?: string
  type: string
  value: runtime.Decimal | runtime.DecimalJsLike | number | string
  enabled?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  user: Prisma.UserCreateNestedOneWithoutRiskLimitsInput
}

export type RiskLimitUncheckedCreateWithoutPortfolioInput = {
  id?: string
  userId: string
  type: string
  value: runtime.Decimal | runtime.DecimalJsLike | number | string
  enabled?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type RiskLimitCreateOrConnectWithoutPortfolioInput = {
  where: Prisma.RiskLimitWhereUniqueInput
  create: Prisma.XOR<Prisma.RiskLimitCreateWithoutPortfolioInput, Prisma.RiskLimitUncheckedCreateWithoutPortfolioInput>
}

export type RiskLimitCreateManyPortfolioInputEnvelope = {
  data: Prisma.RiskLimitCreateManyPortfolioInput | Prisma.RiskLimitCreateManyPortfolioInput[]
  skipDuplicates?: boolean
}

export type RiskLimitUpsertWithWhereUniqueWithoutPortfolioInput = {
  where: Prisma.RiskLimitWhereUniqueInput
  update: Prisma.XOR<Prisma.RiskLimitUpdateWithoutPortfolioInput, Prisma.RiskLimitUncheckedUpdateWithoutPortfolioInput>
  create: Prisma.XOR<Prisma.RiskLimitCreateWithoutPortfolioInput, Prisma.RiskLimitUncheckedCreateWithoutPortfolioInput>
}

export type RiskLimitUpdateWithWhereUniqueWithoutPortfolioInput = {
  where: Prisma.RiskLimitWhereUniqueInput
  data: Prisma.XOR<Prisma.RiskLimitUpdateWithoutPortfolioInput, Prisma.RiskLimitUncheckedUpdateWithoutPortfolioInput>
}

export type RiskLimitUpdateManyWithWhereWithoutPortfolioInput = {
  where: Prisma.RiskLimitScalarWhereInput
  data: Prisma.XOR<Prisma.RiskLimitUpdateManyMutationInput, Prisma.RiskLimitUncheckedUpdateManyWithoutPortfolioInput>
}

export type RiskLimitCreateManyUserInput = {
  id?: string
  portfolioId?: string | null
  type: string
  value: runtime.Decimal | runtime.DecimalJsLike | number | string
  enabled?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type RiskLimitUpdateWithoutUserInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  type?: Prisma.StringFieldUpdateOperationsInput | string
  value?: Prisma.DecimalFieldUpdateOperationsInput | runtime.Decimal | runtime.DecimalJsLike | number | string
  enabled?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  portfolio?: Prisma.PortfolioUpdateOneWithoutRiskLimitsNestedInput
}

export type RiskLimitUncheckedUpdateWithoutUserInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  portfolioId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  type?: Prisma.StringFieldUpdateOperationsInput | string
  value?: Prisma.DecimalFieldUpdateOperationsInput | runtime.Decimal | runtime.DecimalJsLike | number | string
  enabled?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type RiskLimitUncheckedUpdateManyWithoutUserInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  portfolioId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  type?: Prisma.StringFieldUpdateOperationsInput | string
  value?: Prisma.DecimalFieldUpdateOperationsInput | runtime.Decimal | runtime.DecimalJsLike | number | string
  enabled?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type RiskLimitCreateManyPortfolioInput = {
  id?: string
  userId: string
  type: string
  value: runtime.Decimal | runtime.DecimalJsLike | number | string
  enabled?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type RiskLimitUpdateWithoutPortfolioInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  type?: Prisma.StringFieldUpdateOperationsInput | string
  value?: Prisma.DecimalFieldUpdateOperationsInput | runtime.Decimal | runtime.DecimalJsLike | number | string
  enabled?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  user?: Prisma.UserUpdateOneRequiredWithoutRiskLimitsNestedInput
}

export type RiskLimitUncheckedUpdateWithoutPortfolioInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  userId?: Prisma.StringFieldUpdateOperationsInput | string
  type?: Prisma.StringFieldUpdateOperationsInput | string
  value?: Prisma.DecimalFieldUpdateOperationsInput | runtime.Decimal | runtime.DecimalJsLike | number | string
  enabled?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type RiskLimitUncheckedUpdateManyWithoutPortfolioInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  userId?: Prisma.StringFieldUpdateOperationsInput | string
  type?: Prisma.StringFieldUpdateOperationsInput | string
  value?: Prisma.DecimalFieldUpdateOperationsInput | runtime.Decimal | runtime.DecimalJsLike | number | string
  enabled?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}



export type RiskLimitSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  userId?: boolean
  portfolioId?: boolean
  type?: boolean
  value?: boolean
  enabled?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  user?: boolean | Prisma.UserDefaultArgs<ExtArgs>
  portfolio?: boolean | Prisma.RiskLimit$portfolioArgs<ExtArgs>
}, ExtArgs["result"]["riskLimit"]>

export type RiskLimitSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  userId?: boolean
  portfolioId?: boolean
  type?: boolean
  value?: boolean
  enabled?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  user?: boolean | Prisma.UserDefaultArgs<ExtArgs>
  portfolio?: boolean | Prisma.RiskLimit$portfolioArgs<ExtArgs>
}, ExtArgs["result"]["riskLimit"]>

export type RiskLimitSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  userId?: boolean
  portfolioId?: boolean
  type?: boolean
  value?: boolean
  enabled?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  user?: boolean | Prisma.UserDefaultArgs<ExtArgs>
  portfolio?: boolean | Prisma.RiskLimit$portfolioArgs<ExtArgs>
}, ExtArgs["result"]["riskLimit"]>

export type RiskLimitSelectScalar = {
  id?: boolean
  userId?: boolean
  portfolioId?: boolean
  type?: boolean
  value?: boolean
  enabled?: boolean
  createdAt?: boolean
  updatedAt?: boolean
}

export type RiskLimitOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "userId" | "portfolioId" | "type" | "value" | "enabled" | "createdAt" | "updatedAt", ExtArgs["result"]["riskLimit"]>
export type RiskLimitInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  user?: boolean | Prisma.UserDefaultArgs<ExtArgs>
  portfolio?: boolean | Prisma.RiskLimit$portfolioArgs<ExtArgs>
}
export type RiskLimitIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  user?: boolean | Prisma.UserDefaultArgs<ExtArgs>
  portfolio?: boolean | Prisma.RiskLimit$portfolioArgs<ExtArgs>
}
export type RiskLimitIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  user?: boolean | Prisma.UserDefaultArgs<ExtArgs>
  portfolio?: boolean | Prisma.RiskLimit$portfolioArgs<ExtArgs>
}

export type $RiskLimitPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "RiskLimit"
  objects: {
    user: Prisma.$UserPayload<ExtArgs>
    portfolio: Prisma.$PortfolioPayload<ExtArgs> | null
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: string
    userId: string
    portfolioId: string | null
    type: string
    value: runtime.Decimal
    enabled: boolean
    createdAt: Date
    updatedAt: Date
  }, ExtArgs["result"]["riskLimit"]>
  composites: {}
}

export type RiskLimitGetPayload<S extends boolean | null | undefined | RiskLimitDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$RiskLimitPayload, S>

export type RiskLimitCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<RiskLimitFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: RiskLimitCountAggregateInputType | true
  }

export interface RiskLimitDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['RiskLimit'], meta: { name: 'RiskLimit' } }
  /**
   * Find zero or one RiskLimit that matches the filter.
   * @param {RiskLimitFindUniqueArgs} args - Arguments to find a RiskLimit
   * @example
   * // Get one RiskLimit
   * const riskLimit = await prisma.riskLimit.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends RiskLimitFindUniqueArgs>(args: Prisma.SelectSubset<T, RiskLimitFindUniqueArgs<ExtArgs>>): Prisma.Prisma__RiskLimitClient<runtime.Types.Result.GetResult<Prisma.$RiskLimitPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one RiskLimit that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {RiskLimitFindUniqueOrThrowArgs} args - Arguments to find a RiskLimit
   * @example
   * // Get one RiskLimit
   * const riskLimit = await prisma.riskLimit.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends RiskLimitFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, RiskLimitFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__RiskLimitClient<runtime.Types.Result.GetResult<Prisma.$RiskLimitPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first RiskLimit that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {RiskLimitFindFirstArgs} args - Arguments to find a RiskLimit
   * @example
   * // Get one RiskLimit
   * const riskLimit = await prisma.riskLimit.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends RiskLimitFindFirstArgs>(args?: Prisma.SelectSubset<T, RiskLimitFindFirstArgs<ExtArgs>>): Prisma.Prisma__RiskLimitClient<runtime.Types.Result.GetResult<Prisma.$RiskLimitPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first RiskLimit that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {RiskLimitFindFirstOrThrowArgs} args - Arguments to find a RiskLimit
   * @example
   * // Get one RiskLimit
   * const riskLimit = await prisma.riskLimit.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends RiskLimitFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, RiskLimitFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__RiskLimitClient<runtime.Types.Result.GetResult<Prisma.$RiskLimitPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more RiskLimits that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {RiskLimitFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all RiskLimits
   * const riskLimits = await prisma.riskLimit.findMany()
   * 
   * // Get first 10 RiskLimits
   * const riskLimits = await prisma.riskLimit.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const riskLimitWithIdOnly = await prisma.riskLimit.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends RiskLimitFindManyArgs>(args?: Prisma.SelectSubset<T, RiskLimitFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$RiskLimitPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a RiskLimit.
   * @param {RiskLimitCreateArgs} args - Arguments to create a RiskLimit.
   * @example
   * // Create one RiskLimit
   * const RiskLimit = await prisma.riskLimit.create({
   *   data: {
   *     // ... data to create a RiskLimit
   *   }
   * })
   * 
   */
  create<T extends RiskLimitCreateArgs>(args: Prisma.SelectSubset<T, RiskLimitCreateArgs<ExtArgs>>): Prisma.Prisma__RiskLimitClient<runtime.Types.Result.GetResult<Prisma.$RiskLimitPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many RiskLimits.
   * @param {RiskLimitCreateManyArgs} args - Arguments to create many RiskLimits.
   * @example
   * // Create many RiskLimits
   * const riskLimit = await prisma.riskLimit.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends RiskLimitCreateManyArgs>(args?: Prisma.SelectSubset<T, RiskLimitCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many RiskLimits and returns the data saved in the database.
   * @param {RiskLimitCreateManyAndReturnArgs} args - Arguments to create many RiskLimits.
   * @example
   * // Create many RiskLimits
   * const riskLimit = await prisma.riskLimit.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many RiskLimits and only return the `id`
   * const riskLimitWithIdOnly = await prisma.riskLimit.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends RiskLimitCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, RiskLimitCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$RiskLimitPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a RiskLimit.
   * @param {RiskLimitDeleteArgs} args - Arguments to delete one RiskLimit.
   * @example
   * // Delete one RiskLimit
   * const RiskLimit = await prisma.riskLimit.delete({
   *   where: {
   *     // ... filter to delete one RiskLimit
   *   }
   * })
   * 
   */
  delete<T extends RiskLimitDeleteArgs>(args: Prisma.SelectSubset<T, RiskLimitDeleteArgs<ExtArgs>>): Prisma.Prisma__RiskLimitClient<runtime.Types.Result.GetResult<Prisma.$RiskLimitPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one RiskLimit.
   * @param {RiskLimitUpdateArgs} args - Arguments to update one RiskLimit.
   * @example
   * // Update one RiskLimit
   * const riskLimit = await prisma.riskLimit.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends RiskLimitUpdateArgs>(args: Prisma.SelectSubset<T, RiskLimitUpdateArgs<ExtArgs>>): Prisma.Prisma__RiskLimitClient<runtime.Types.Result.GetResult<Prisma.$RiskLimitPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more RiskLimits.
   * @param {RiskLimitDeleteManyArgs} args - Arguments to filter RiskLimits to delete.
   * @example
   * // Delete a few RiskLimits
   * const { count } = await prisma.riskLimit.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends RiskLimitDeleteManyArgs>(args?: Prisma.SelectSubset<T, RiskLimitDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more RiskLimits.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {RiskLimitUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many RiskLimits
   * const riskLimit = await prisma.riskLimit.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends RiskLimitUpdateManyArgs>(args: Prisma.SelectSubset<T, RiskLimitUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more RiskLimits and returns the data updated in the database.
   * @param {RiskLimitUpdateManyAndReturnArgs} args - Arguments to update many RiskLimits.
   * @example
   * // Update many RiskLimits
   * const riskLimit = await prisma.riskLimit.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more RiskLimits and only return the `id`
   * const riskLimitWithIdOnly = await prisma.riskLimit.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends RiskLimitUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, RiskLimitUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$RiskLimitPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one RiskLimit.
   * @param {RiskLimitUpsertArgs} args - Arguments to update or create a RiskLimit.
   * @example
   * // Update or create a RiskLimit
   * const riskLimit = await prisma.riskLimit.upsert({
   *   create: {
   *     // ... data to create a RiskLimit
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the RiskLimit we want to update
   *   }
   * })
   */
  upsert<T extends RiskLimitUpsertArgs>(args: Prisma.SelectSubset<T, RiskLimitUpsertArgs<ExtArgs>>): Prisma.Prisma__RiskLimitClient<runtime.Types.Result.GetResult<Prisma.$RiskLimitPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of RiskLimits.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {RiskLimitCountArgs} args - Arguments to filter RiskLimits to count.
   * @example
   * // Count the number of RiskLimits
   * const count = await prisma.riskLimit.count({
   *   where: {
   *     // ... the filter for the RiskLimits we want to count
   *   }
   * })
  **/
  count<T extends RiskLimitCountArgs>(
    args?: Prisma.Subset<T, RiskLimitCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], RiskLimitCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a RiskLimit.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {RiskLimitAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends RiskLimitAggregateArgs>(args: Prisma.Subset<T, RiskLimitAggregateArgs>): Prisma.PrismaPromise<GetRiskLimitAggregateType<T>>

  /**
   * Group by RiskLimit.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {RiskLimitGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends RiskLimitGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: RiskLimitGroupByArgs['orderBy'] }
      : { orderBy?: RiskLimitGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, RiskLimitGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRiskLimitGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the RiskLimit model
 */
readonly fields: RiskLimitFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for RiskLimit.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__RiskLimitClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  user<T extends Prisma.UserDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.UserDefaultArgs<ExtArgs>>): Prisma.Prisma__UserClient<runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  portfolio<T extends Prisma.RiskLimit$portfolioArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.RiskLimit$portfolioArgs<ExtArgs>>): Prisma.Prisma__PortfolioClient<runtime.Types.Result.GetResult<Prisma.$PortfolioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the RiskLimit model
 */
export interface RiskLimitFieldRefs {
  readonly id: Prisma.FieldRef<"RiskLimit", 'String'>
  readonly userId: Prisma.FieldRef<"RiskLimit", 'String'>
  readonly portfolioId: Prisma.FieldRef<"RiskLimit", 'String'>
  readonly type: Prisma.FieldRef<"RiskLimit", 'String'>
  readonly value: Prisma.FieldRef<"RiskLimit", 'Decimal'>
  readonly enabled: Prisma.FieldRef<"RiskLimit", 'Boolean'>
  readonly createdAt: Prisma.FieldRef<"RiskLimit", 'DateTime'>
  readonly updatedAt: Prisma.FieldRef<"RiskLimit", 'DateTime'>
}
    

// Custom InputTypes
/**
 * RiskLimit findUnique
 */
export type RiskLimitFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the RiskLimit
   */
  select?: Prisma.RiskLimitSelect<ExtArgs> | null
  /**
   * Omit specific fields from the RiskLimit
   */
  omit?: Prisma.RiskLimitOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.RiskLimitInclude<ExtArgs> | null
  /**
   * Filter, which RiskLimit to fetch.
   */
  where: Prisma.RiskLimitWhereUniqueInput
}

/**
 * RiskLimit findUniqueOrThrow
 */
export type RiskLimitFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the RiskLimit
   */
  select?: Prisma.RiskLimitSelect<ExtArgs> | null
  /**
   * Omit specific fields from the RiskLimit
   */
  omit?: Prisma.RiskLimitOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.RiskLimitInclude<ExtArgs> | null
  /**
   * Filter, which RiskLimit to fetch.
   */
  where: Prisma.RiskLimitWhereUniqueInput
}

/**
 * RiskLimit findFirst
 */
export type RiskLimitFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the RiskLimit
   */
  select?: Prisma.RiskLimitSelect<ExtArgs> | null
  /**
   * Omit specific fields from the RiskLimit
   */
  omit?: Prisma.RiskLimitOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.RiskLimitInclude<ExtArgs> | null
  /**
   * Filter, which RiskLimit to fetch.
   */
  where?: Prisma.RiskLimitWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of RiskLimits to fetch.
   */
  orderBy?: Prisma.RiskLimitOrderByWithRelationInput | Prisma.RiskLimitOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for RiskLimits.
   */
  cursor?: Prisma.RiskLimitWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` RiskLimits from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` RiskLimits.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of RiskLimits.
   */
  distinct?: Prisma.RiskLimitScalarFieldEnum | Prisma.RiskLimitScalarFieldEnum[]
}

/**
 * RiskLimit findFirstOrThrow
 */
export type RiskLimitFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the RiskLimit
   */
  select?: Prisma.RiskLimitSelect<ExtArgs> | null
  /**
   * Omit specific fields from the RiskLimit
   */
  omit?: Prisma.RiskLimitOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.RiskLimitInclude<ExtArgs> | null
  /**
   * Filter, which RiskLimit to fetch.
   */
  where?: Prisma.RiskLimitWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of RiskLimits to fetch.
   */
  orderBy?: Prisma.RiskLimitOrderByWithRelationInput | Prisma.RiskLimitOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for RiskLimits.
   */
  cursor?: Prisma.RiskLimitWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` RiskLimits from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` RiskLimits.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of RiskLimits.
   */
  distinct?: Prisma.RiskLimitScalarFieldEnum | Prisma.RiskLimitScalarFieldEnum[]
}

/**
 * RiskLimit findMany
 */
export type RiskLimitFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the RiskLimit
   */
  select?: Prisma.RiskLimitSelect<ExtArgs> | null
  /**
   * Omit specific fields from the RiskLimit
   */
  omit?: Prisma.RiskLimitOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.RiskLimitInclude<ExtArgs> | null
  /**
   * Filter, which RiskLimits to fetch.
   */
  where?: Prisma.RiskLimitWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of RiskLimits to fetch.
   */
  orderBy?: Prisma.RiskLimitOrderByWithRelationInput | Prisma.RiskLimitOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing RiskLimits.
   */
  cursor?: Prisma.RiskLimitWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` RiskLimits from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` RiskLimits.
   */
  skip?: number
  distinct?: Prisma.RiskLimitScalarFieldEnum | Prisma.RiskLimitScalarFieldEnum[]
}

/**
 * RiskLimit create
 */
export type RiskLimitCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the RiskLimit
   */
  select?: Prisma.RiskLimitSelect<ExtArgs> | null
  /**
   * Omit specific fields from the RiskLimit
   */
  omit?: Prisma.RiskLimitOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.RiskLimitInclude<ExtArgs> | null
  /**
   * The data needed to create a RiskLimit.
   */
  data: Prisma.XOR<Prisma.RiskLimitCreateInput, Prisma.RiskLimitUncheckedCreateInput>
}

/**
 * RiskLimit createMany
 */
export type RiskLimitCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many RiskLimits.
   */
  data: Prisma.RiskLimitCreateManyInput | Prisma.RiskLimitCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * RiskLimit createManyAndReturn
 */
export type RiskLimitCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the RiskLimit
   */
  select?: Prisma.RiskLimitSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the RiskLimit
   */
  omit?: Prisma.RiskLimitOmit<ExtArgs> | null
  /**
   * The data used to create many RiskLimits.
   */
  data: Prisma.RiskLimitCreateManyInput | Prisma.RiskLimitCreateManyInput[]
  skipDuplicates?: boolean
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.RiskLimitIncludeCreateManyAndReturn<ExtArgs> | null
}

/**
 * RiskLimit update
 */
export type RiskLimitUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the RiskLimit
   */
  select?: Prisma.RiskLimitSelect<ExtArgs> | null
  /**
   * Omit specific fields from the RiskLimit
   */
  omit?: Prisma.RiskLimitOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.RiskLimitInclude<ExtArgs> | null
  /**
   * The data needed to update a RiskLimit.
   */
  data: Prisma.XOR<Prisma.RiskLimitUpdateInput, Prisma.RiskLimitUncheckedUpdateInput>
  /**
   * Choose, which RiskLimit to update.
   */
  where: Prisma.RiskLimitWhereUniqueInput
}

/**
 * RiskLimit updateMany
 */
export type RiskLimitUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update RiskLimits.
   */
  data: Prisma.XOR<Prisma.RiskLimitUpdateManyMutationInput, Prisma.RiskLimitUncheckedUpdateManyInput>
  /**
   * Filter which RiskLimits to update
   */
  where?: Prisma.RiskLimitWhereInput
  /**
   * Limit how many RiskLimits to update.
   */
  limit?: number
}

/**
 * RiskLimit updateManyAndReturn
 */
export type RiskLimitUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the RiskLimit
   */
  select?: Prisma.RiskLimitSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the RiskLimit
   */
  omit?: Prisma.RiskLimitOmit<ExtArgs> | null
  /**
   * The data used to update RiskLimits.
   */
  data: Prisma.XOR<Prisma.RiskLimitUpdateManyMutationInput, Prisma.RiskLimitUncheckedUpdateManyInput>
  /**
   * Filter which RiskLimits to update
   */
  where?: Prisma.RiskLimitWhereInput
  /**
   * Limit how many RiskLimits to update.
   */
  limit?: number
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.RiskLimitIncludeUpdateManyAndReturn<ExtArgs> | null
}

/**
 * RiskLimit upsert
 */
export type RiskLimitUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the RiskLimit
   */
  select?: Prisma.RiskLimitSelect<ExtArgs> | null
  /**
   * Omit specific fields from the RiskLimit
   */
  omit?: Prisma.RiskLimitOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.RiskLimitInclude<ExtArgs> | null
  /**
   * The filter to search for the RiskLimit to update in case it exists.
   */
  where: Prisma.RiskLimitWhereUniqueInput
  /**
   * In case the RiskLimit found by the `where` argument doesn't exist, create a new RiskLimit with this data.
   */
  create: Prisma.XOR<Prisma.RiskLimitCreateInput, Prisma.RiskLimitUncheckedCreateInput>
  /**
   * In case the RiskLimit was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.RiskLimitUpdateInput, Prisma.RiskLimitUncheckedUpdateInput>
}

/**
 * RiskLimit delete
 */
export type RiskLimitDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the RiskLimit
   */
  select?: Prisma.RiskLimitSelect<ExtArgs> | null
  /**
   * Omit specific fields from the RiskLimit
   */
  omit?: Prisma.RiskLimitOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.RiskLimitInclude<ExtArgs> | null
  /**
   * Filter which RiskLimit to delete.
   */
  where: Prisma.RiskLimitWhereUniqueInput
}

/**
 * RiskLimit deleteMany
 */
export type RiskLimitDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which RiskLimits to delete
   */
  where?: Prisma.RiskLimitWhereInput
  /**
   * Limit how many RiskLimits to delete.
   */
  limit?: number
}

/**
 * RiskLimit.portfolio
 */
export type RiskLimit$portfolioArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Portfolio
   */
  select?: Prisma.PortfolioSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Portfolio
   */
  omit?: Prisma.PortfolioOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PortfolioInclude<ExtArgs> | null
  where?: Prisma.PortfolioWhereInput
}

/**
 * RiskLimit without action
 */
export type RiskLimitDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the RiskLimit
   */
  select?: Prisma.RiskLimitSelect<ExtArgs> | null
  /**
   * Omit specific fields from the RiskLimit
   */
  omit?: Prisma.RiskLimitOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.RiskLimitInclude<ExtArgs> | null
}
